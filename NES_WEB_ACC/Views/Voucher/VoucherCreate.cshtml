@model NES_WEB_ACC.ViewModels.CreateInfoViewModel
@{
    ViewBag.Title = @Resources.Content.VoucherCreate;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css {
    <link rel="stylesheet" type="text/css" href="~/Scripts/mycss/body_container_erp.css" />
    <style>
        /*#region Body style*/

        #content-tabs {
            padding-bottom: 10px;
        }

        /*#endregion*/

        /*#region easyui style*/
        .textbox-readonly .textbox-text {
            background: #EEEEEE;
        }

        .ischecked-row:not(.datagrid-row-over,.datagrid-row-checked,.datagrid-row-selected) {
            background-color: #fdff47;
            color: black;
            cursor: default;
        }

        /*.yellow-row:not(.datagrid-row-over,.datagrid-row-checked,.datagrid-row-selected) {
            background-color: #a2f8f8;
            color: black;
            cursor: default;
        }*/

        .gray-row:not(.datagrid-row-over,.datagrid-row-checked,.datagrid-row-selected) {
            background-color: #fa806f;
            color: black;
            cursor: default;
        }

        .close-row:not(.datagrid-row-over,.datagrid-row-checked,.datagrid-row-selected) {
            background-color: #6df757;
            color: black;
            cursor: default;
        }

        .cancel-row:not(.datagrid-row-over,.datagrid-row-checked,.datagrid-row-selected) {
            background-color: #e196fb;
            color: black;
            cursor: default;
        }

        .error-row:not(.datagrid-row-over,.datagrid-row-checked,.datagrid-row-selected) {
            background-color: #fdff47;
            color: black;
            cursor: default;
        }

        .datagrid-row-selected div {
            color: white;
        }

        .datagrid-row-editing td {
            color: black;
        }

        .header-toolbar .easyui-linkbutton {
            width: 50px;
            height: 52px;
            font-size: 0.9em;
            font-weight: bold;
            margin: 0px;
            padding: 0px;
        }

        .header-toolbar .linkbtn2 {
            width: 60px;
        }

        .header-toolbar .linkbtn3 {
            width: 95px;
        }

        .header-toolbar .l-btn-text {
            font-size: 12px !important;
            margin-top: 28px !important;
        }

        .header-toolbar .l-btn-icon {
            width: 24px !important;
            height: 24px !important;
            left: 60% !important;
        }

        .separatorbar {
            margin-right: 20px;
        }

        .tabs-wrap .tabs {
            width: 99% !important;
        }

        .switchbtn {
            text-decoration: none;
            display: inline-block;
            overflow: hidden;
            vertical-align: middle;
            margin: 5px 10px 0px 0px;
            padding: 3px;
            cursor: pointer;
            border: 1px solid #bbb;
            -moz-border-radius: 5px 5px 5px 5px;
            -webkit-border-radius: 5px 5px 5px 5px;
            border-radius: 5px 5px 5px 5px;
        }

            .switchbtn label {
                margin-left: 3px;
            }

        .btnliktype .l-btn-text {
            margin-left: 15px;
            font-size: 12px !important;
        }
        /*#endregion*/
        /*#region datagrid style*/

        .datagrid-view tr, .datagrid-view td {
            border: 1px solid black;
        }

        .datagrid-header-row td {
            background-color: #d2d2d2;
            color: #333;
            font-weight: bold;
            border: 1px solid black !important;
        }

        .datagrid-header, .datagrid-td-rownumber {
            background-color: #fff !important;
            background: none;
            background-repeat: no-repeat;
        }


        .datagrid-cell-rownumber {
            color: black !important;
        }

        .datagrid-row .datagrid-cell {
            margin: 0px !important;
            padding: 0px;
        }

        .subtd {
            width: 100% !important;
            height: 100% !important;
            margin: 0px !important;
            padding: 1px !important;
            border: 1px solid black !important;
            min-height: 22px;
        }
        /*#endregion */
        /*#region table style*/
        /* 初始表格外框顏色 */
        .datagrid {
            border: 2px solid white; /* 默認顏色 */
        }

        .container-table {
            width: 99%;
            margin: 0px 20px 0px 2px;
            padding: 0px;
            table-layout: fixed;
            word-break: break-all;
        }

            .container-table .table-header {
                background-color: #95B3D7;
                border: solid 1px black;
            }

            .container-table th, .container-table tr, .container-table tr td {
                /*border: none;*/
                border: solid 1px black !important;
                text-align: center;
            }

            .container-table th, .container-table tr, .container-table td {
                height: 32px !important;
                margin: 0px !important;
                padding: 0px !important;
            }

                .container-table tr td {
                    font-size: 1.0em;
                    vertical-align: middle !important;
                    font-weight: bold;
                }

            .container-table th {
                font-size: 1.0em;
                vertical-align: middle !important;
            }

        tr td label {
            margin: 0px !important;
            padding: 0px !important;
        }
        /*#endregion*/
        /*#region row style*/
        .row-fix {
            margin-left: 0px !important;
        }

        .row-filestyle {
            margin-top: 5px;
            margin-left: 3px;
            margin-bottom: 5px;
            border-bottom: 1px solid black;
            padding: 3px;
        }

        .col-fix-1, .col-fix-2, .col-fix-3 {
            padding: 0px;
            margin-right: 0px;
        }

            .col-fix-1 > span {
                margin-left: 35px;
            }

            .col-fix-1 input[type="text"], .col-fix-1 .form-control,
            .col-fix-1 .easyui-combobox,
            .col-fix-1 .easyui-textbox:not(.col-fix-lg),
            .col-fix-1 .easyui-datebox, .col-fix-1 .easyui-maskedbox {
                width: 120px !important;
            }


            .col-fix-2 input[type="text"]:not(.textbox-text), .col-fix-2 .form-control,
            .col-fix-2 .easyui-combobox, .col-fix-2 .easyui-textbox,
            .col-fix-2 .easyui-datebox, .col-fix-2 .easyui-maskedbox {
                width: 110px !important;
            }

            .col-fix-3 input[type="text"], .col-fix-3 .form-control,
            .col-fix-3 .easyui-combobox, .col-fix-3 .easyui-textbox,
            .col-fix-3 .easyui-datebox, .col-fix-3 .easyui-maskedbox {
                width: 120px !important;
            }

            .col-fix-1 .col-fix-lg, .col-fix-2 .col-fix-lg, .col-fix-3 .col-fix-lg {
                width: 300px !important;
            }

                .col-fix-1 .col-fix-lg input[type="text"], .col-fix-1 .col-fix-lg .easyui-textbox {
                    width: 300px !important;
                }
        /*#endregion*/


        .progress-extended div label, .progress-txtextended div label {
            width: 100%;
            text-align: left;
        }

        .progress-extended .row, .progress-txtextended .row {
            margin: 10px;
            padding: 5px;
            border-bottom: 0.5px solid black;
        }

            .progress-extended .row .btn, .progress-txtextended .row .btn {
                margin-right: 15px;
            }

        .form-viewer {
            width: 99%;
            height: 100%;
        }

        /*#region form style*/
        .formtext {
            white-space: nowrap;
            border: 1px solid black;
        }

        .formimport {
            border: 1px solid black;
        }
        /*#endregion */
        @@media (max-width: 1400px) {
            #submenu {
                font-size: 0.9em !important;
            }

            #body-container {
                max-height: calc(100vh - 130px);
                font-size: 0.9em;
            }

            #content-top {
                font-size: 0.9em !important;
                min-height: 155px;
            }

            #content-grid {
                min-height: calc(100vh - 300px);
            }

            .panel-title, .tabs-title {
                font-size: 0.8em;
            }

            .panel-header, .tabs, .tabs-wrap, .tabs-selected, .tabs-inner {
                height: 23px !important;
                padding: 1px !important;
            }

            .datagrid-cell {
                font-size: 0.8em !important;
            }

            .datagrid-header-row {
                font-size: 0.8em !important;
                height: 28px !important;
            }

            .layout-panel-center .datagrid-row,
            .layout-panel-center .datagrid-row-editing,
            .layout-panel-center .datagrid-row-editing td,
            .layout-panel-center .datagrid-row-editing span,
            .layout-panel-center .datagrid-row-editing input {
                height: 35px;
            }

            .col-fix-1 label, .col-fix-2 label, .col-fix-3 label {
                font-size: 9px !important;
            }

            .col-fix-1 span {
                margin-left: 10px;
            }

            .col-fix-1 input[type="text"], .col-fix-1 .form-control,
            .col-fix-1 .easyui-combobox, .col-fix-1 .easyui-textbox,
            .col-fix-1 .easyui-datebox, .col-fix-1 .easyui-maskedbox {
                font-size: 9px !important;
                width: 100px !important;
            }

            .col-fix-2 input[type="text"], .col-fix-2 .form-control,
            .col-fix-2 .easyui-combobox, .col-fix-2 .easyui-textbox,
            .col-fix-2 .easyui-datebox, .col-fix-2 .easyui-maskedbox {
                font-size: 9px !important;
                width: 90px !important;
            }

            .col-fix-3 input[type="text"], .col-fix-3 .form-control,
            .col-fix-3 .easyui-combobox, .col-fix-3 .easyui-textbox,
            .col-fix-3 .easyui-datebox, .col-fix-3 .easyui-maskedbox {
                font-size: 9px !important;
                width: 100px !important;
            }

            .col-fix-4 input[type="text"], .col-fix-4 .form-control,
            .col-fix-4 .easyui-combobox, .col-fix-4 .easyui-textbox,
            .col-fix-4 .easyui-datebox, .col-fix-4 .easyui-maskedbox {
                font-size: 9px !important;
                width: 80px !important;
            }

            .col-fix-1 .col-fix-lg, .col-fix-2 .col-fix-lg, .col-fix-3 .col-fix-lg {
                width: 200px !important;
            }

            .textbox-button .l-btn-left {
                margin: 0px !important;
                padding-left: 20px;
                height: 28px;
                width: 28px;
            }

                .textbox-button .l-btn-left .l-btn-icon {
                    margin-top: -8px;
                    margin-left: 0px !important;
                }

            .textbox-button .l-btn-text {
                font-size: 0px !important;
            }

            .btndeliverychange, .btnmanualclose, .btnstockenter {
                width: 65px !important;
                height: 45px !important;
            }

            .btnreportset {
                width: 60px !important;
                height: 45px !important;
                font-size: 0.7em !important;
            }
        }
    </style>
}

@{ Html.RenderAction("_ToolBarPartial"); }

<div id="body-container">
    <div class="easyui-layout body-layout">
        <div data-options="region:'west',collapsible:false" title="" style="width:25%;height:100%;">
            <table id="maindg" class="datagrid easyui-maindg" style="width:100%;height:100%;"></table>
        </div>

        <div data-options="region:'east',collapsible:false" title="" style="width: 75%; height: 100%;">
            <div class="row" style="width: 99%;height:21%; margin: 2px;">
                @{ Html.RenderAction("_VoucherTableInfoPartial"); }
            </div>
            <div class="row" style="width: 99%; height: 70%; margin: 2px;">
                <div id="content-tabs" class="easyui-tabs" style="width:100%;height:100%;">
                    <div title="分錄明細" style="padding:2px;display:none;">
                        <table id="itemdg" class="datagrid easyui-itemdg" style="width: 100%; height: 100%; margin: 5px;"></table>
                    </div>
                    <div title="進階資料" style="overflow: auto; padding: 20px; display: none;">
                        @{ Html.RenderAction("_VoucherTableAdvPartial"); }
                    </div>
                </div>
            </div>
            <div class="row" style="width: 99%; height: 5%; margin: 0px;">
                @{ Html.RenderAction("_VoucherDCShowPartial"); }
            </div>
        </div>
    </div>
</div>
@*dialog_[編輯]科目編號_dlgdg1*@
<div id="dlgEditAccNo" class="easyui-dialog" data-options="modal:true,closed:true">
    <div id="toolbar1">
        @*<a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg1search')">Search</a>*@
        <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg1insert')">選入</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg1exit')">離開</a>
    </div>
    <table id="dlgdg1" class="datagrid easyui-maindg" style="width:100%;height:100%;"></table>
</div>
@*dialog_[編輯]摘要說明*@
<div id="dlgEditRemark" class="easyui-dialog" data-options="modal:true,closed:true">
    <input id="remarkBox" class="easyui-textbox" prompt="Remark..." style="width:300px">
</div>
@*dialog_[編輯]借貸方向*@
<div id="dlgEditDCType" class="easyui-dialog" data-options="modal:true,closed:true">
    <table style="width:100%;">
        <tr>
            <td style="width:50%">
                <label class="radio-label">借:</label>
                <input class="easyui-radiobutton" name="DCTpye" value="D" id="dctpyeD">
            </td>
            <td style="width:50%">
                <label class="radio-label">貸:</label>
                <input class="easyui-radiobutton" name="DCTpye" value="C" id="dctpyeC">
            </td>
        </tr>
    </table>
</div>
@*dialog_[編輯]交易幣別_dlgdg2*@
<div id="dlgEditCurrencyNo" class="easyui-dialog" data-options="modal:true,closed:true">
    <table id="dlgdg2" class="datagrid easyui-itemdg" style="width:100%;height:100%;"></table>
</div>
@*dialog_[編輯]交易金額*@
<div id="dlgEditMoney" class="easyui-dialog" data-options="modal:true,closed:true">
    <input id="moneyBox" class="easyui-textbox" prompt="交易金額..." style="width:300px" data-options="validType:'number'">
</div>
@*dialog_[編輯]記帳金額*@
<div id="dlgEditMoney1" class="easyui-dialog" data-options="modal:true,closed:true">
    <input id="money1Box" class="easyui-numberbox" prompt="Remark..." style="width:300px" data-options="validType:'number'">
</div>
@*dialog_[編輯]對象編號_dlgdg3*@
<div id="dlgEditTargetNo" class="easyui-dialog" data-options="modal:true,closed:true">

    <div id="dlgtabs" class="easyui-tabs" style="width:100%;height:100%;">
        <div title="廠商">
            <div id="toolbar30">
                <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg30insert')">選入</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg3exit')">離開</a>
            </div>
            <table id="dlgdg30" class="datagrid easyui-itemdg" style="width:100%;height:100%;"></table>
        </div>
        <div title="客戶">
            <div id="toolbar31">
                <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg31insert')">選入</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg3exit')">離開</a>
            </div>
            <table id="dlgdg31" class="datagrid easyui-itemdg" style="width:100%;height:100%;"></table>
        </div>
        <div title="員工">
            <div id="toolbar32">
                <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg32insert')">選入</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg3exit')">離開</a>
            </div>
            <table id="dlgdg32" class="datagrid easyui-itemdg" style="width:100%;height:100%;"></table>
        </div>
        <div title="銀行">
            <div id="toolbar33">
                <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg33insert')">選入</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg3exit')">離開</a>
            </div>
            <table id="dlgdg33" class="datagrid easyui-itemdg" style="width:100%;height:100%;"></table>
        </div>
    </div>
</div>
@*dialog_[編輯]會計部門編號*@
@*dialog_[編輯]成本中心編號_dlgdg4*@
<div id="dlgEditAccDept" class="easyui-dialog" data-options="modal:true,closed:true">
    <div id="toolbar4">
        <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg4insert')">選入</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg4exit')">離開</a>
    </div>
    <table id="dlgdg4" class="datagrid easyui-itemdg" style="width:100%;height:100%;"></table>
</div>
@*dialog_[編輯]支付部門編號_dlgdg5*@
<div id="dlgEditPayDept" class="easyui-dialog" data-options="modal:true,closed:true">
    <div id="toolbar5">
        <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg5insert')">選入</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" onclick="btnClick('dlgdg5exit')">離開</a>
    </div>
    <table id="dlgdg5" class="datagrid easyui-itemdg" style="width:100%;height:100%;"></table>
</div>
@*右鍵顯示div*@
<div id="mm" class="easyui-menu" data-options="onClick:menuHandler" style="width:130px;">
    <div data-options="name:'add',iconCls:'icon-add'">新增</div>
    <div data-options="name:'remove',iconCls:'icon-remove'">移除</div>
    @*<div class="menu-sep"></div>
        <div data-options="name:'addD'">新增_借</div>
        <div data-options="name:'addC'">新增_貸</div>*@
    <div class="menu-sep"></div>
    <div data-options="name:'adds',iconCls:'icon-reload'">新增...</div>
</div>
@section Scripts {
    <script src="~/Scripts/easyui/jquery.edatagrid.js"></script>
    <script src="~/Scripts/easyui/datagrid-filter.js"></script>
    <script>
        ///-----基本參數-----///
        //#region 基本參數
        var controllerurl = '/Voucher', functionurl = "/", actionurl = "";
        var maindg = $('#maindg'),        //左側列表
            itemdg = $('#itemdg');      //表身頁籤1列表
        var dlgdg1 = $('#dlgdg1'),        //Dlg列表-會計科目
            dlgdg2 = $('#dlgdg2'),        //Dlg列表-交易幣別
            dlgdg30 = $('#dlgdg30'), dlgdg31 = $('#dlgdg31'), dlgdg32 = $('#dlgdg32'), dlgdg33 = $('#dlgdg33')        //Dlg列表-對象編號
            dlgdg4 = $('#dlgdg4'),        //Dlg列表-成本中心
            dlgdg5 = $('#dlgdg5');        //Dlg列表-支付部門
        var infotabs = $('#infotabs'),  //右側表頭頁籤
            itmetabs = $('#content-tabs'),//右側表身頁籤
            advtabs = $('#advtabs'), //右側表身頁籤3_進階資料
            dlgtabs = $('#dlgtabs');
        var maindgIndex = -1,
            itemdgIndex;

        var actioncode = 'view';

        //#endregion
        //#region 多語系
        var maindglang = {
            BillDate: '@Resources.Content.BillDate',
            BillNo: '@Resources.Content.BillNo',
            VoucherNameC: '@Resources.Content.VoucherNameC',
            EmpNo: '@Resources.Content.EmpNo',
            EmpNameC: '@Resources.Content.EmpNameC',
            Remark: '@Resources.Content.Remark',
            CompNo: '@Resources.Content.CompNo',
            CompAbbr: '@Resources.Content.CompAbbr'
        };
        var itemdglang = {

        };
        var msglang = {
            Title1: '@Resources.Content.Confirm',//確認
            Title2: '@Resources.Content.Alert',  //警告
            Title3: '@Resources.Content.Prompts',  //提示
            MsgLeave: '@Resources.Content.MsgLeave',
            MsgErrCode: '@Resources.Content.MsgErrCode',
            MsgSelectRow: '@Resources.Content.MsgSelectRow',
        }
        //#endregion
        //#region 資料暫存
        var objAccNo = { name: 'AccNo', data: null };
        var objCurrencyNo = { name: 'CurrencyNo', data: null };
        var objAccDept = { name: 'AccDept', data: null };
        var objTargetNo0 = { name: 'TargetNo0', data: null };
        var objTargetNo1 = { name: 'TargetNo1', data: null };
        var objTargetNo2 = { name: 'TargetNo2', data: null };
        var objTargetNo3 = { name: 'TargetNo3', data: null };
        var objPayDept = { name: 'PayDept', data: null };
        var objTargetType = { name: 'TargetType', data: null };
        //#endregion

        //#region 初始化
        $(function () {
            ///-----dg欄位設定-----///
            maindgSet();    //左側列表欄位
            itemdgSet();    //右側側列表欄位_分錄明細
            dlgdg1Set();    //編輯_科目編號
            dlgdg2Set();    //編輯_幣別
            dlgdg3Set();    //編輯_目標編號
            dlgdg4Set();    //編輯_成本中心
            dlgdg5Set();    //編輯_支付部門
            ///-----按鈕狀態-----///
            btnEnableSet('view');
            ///-----資料填值-----///
            maindgData();
            $('#btnreject').hide();
        });
        //#endregion

        //#region dg設定與填值
        ///----- 頁面dg -----///
        function maindgSet() {
            maindg.datagrid({
                singleSelect: true,
                striped: true,
                columns: [[
                    { field: 'WebId', title: 'WebId', hidden: true, type: 'text' },
                    { field: 'Id', title: 'Id', hidden: true, type: 'text' },
                    { field: 'Flag', title: '旗', hidden: true },
                    { field: 'BillDate', title: maindglang.BillDate, width: 80, editor: { type: 'text' }, styler: function (value, row, index) { return 'border:1px solid black;' } },
                    { field: 'BillNo', title: maindglang.BillNo, width: 130, editor: { type: 'text' }, styler: function (value, row, index) { return 'border:1px solid black;' } },
                    { field: 'VoucherNameC', title: maindglang.VoucherNameC, hidden: true },
                    { field: 'EmpNo', title: maindglang.EmpNo, width: 150, editor: { type: 'text' }, styler: function (value, row, index) { return 'border:1px solid black;' } },
                    { field: 'EmpNameC', title: maindglang.EmpNameC, width: 150, editor: { type: 'text' }, styler: function (value, row, index) { return 'border:1px solid black;' } },
                    { field: 'Remark', title: maindglang.Remark, width: 150, editor: { type: 'text' }, styler: function (value, row, index) { return 'border:1px solid black;' } },
                    { field: 'CompNo', title: maindglang.CompNo, width: 150, editor: { type: 'text' }, styler: function (value, row, index) { return 'border:1px solid black;' } },
                    { field: 'CompAbbr', title: maindglang.CompAbbr, width: 150, editor: { type: 'text' }, styler: function (value, row, index) { return 'border:1px solid black;' } },
                    { field: 'BillStatus', title: 'BillStatus', hidden: true  }
                ]],
                onSelect: function (index, row) {
                    if (actioncode === 'add' || actioncode === 'edit') {
                        if (maindgIndex !== index) {
                            $.messager.confirm(msglang.Title1, msglang.MsgLeave, function (r) {
                                if (r) {
                                    maindgIndex = index; // 更新目前行索引
                                    actioncode = 'view'; // 更新行為模式
                                    btnEnableSet(actioncode); // 更新按鈕狀態
                                    tableHeadData(row); // 更新表頭資料
                                    itemdgData(row.WebId); // 更新相關資料表
                                    maindg.datagrid('selectRow', index); // 選擇新行
                                } else {
                                    maindg.datagrid('unselectRow', index);
                                    maindg.datagrid('selectRow', maindgIndex); // 重新選擇原來的行
                                }
                            });
                        }
                    } else {
                        maindgIndex = index;
                        tableHeadData(row);
                        itemdgData(row.WebId);
                    }
                },
                rowStyler: function (index, row) {
                    if (row.BillStatus == '0') { //新建立
                        return 'background-color:#FFFFFF;color:#000000;';
                    }
                    if (row.BillStatus == '1') { //已覆核
                        return 'background-color:#E4CE40;color:#000000;';
                    }
                    if (row.BillStatus == '2') { //主管已審核
                        return 'background-color:#A7CECB;color:#000000;';
                    }
                    if (row.BillStatus == '4') { //主管退件
                        return 'background-color:#FF8552;color:#000000;';
                    }
                }
            });
        }
        function maindgData() {
            actionurl = defaultUrl + controllerurl + functionurl + 'GetVoucherInfo?type=create';
            doajax("GET", actionurl, null, function (result) {
                if (result.success) {
                    if (Array.isArray(result.data)) {
                        // 遍歷數據並格式化日期
                        result.data.forEach(function (item) {
                            if (item.BillDate) {
                                item.BillDate = formatDate(item.BillDate); // 使用formatDate函數格式化日期
                            }
                        });
                    }
                    maindg.datagrid('loadData', result.data);
                } else {
                    $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                    if (result.code == 'C0004') {
                        console.log(result.err);
                    }
                    //maindg.datagrid('loadData', '');
                }
            });
        }
        function itemdgSet() {
            itemdg.datagrid({
                singleSelect: true,
                striped: true,
                columns: [
                    [
                        { field: 'WebId', title: 'WebId', hidden: true, type: 'text', rowspan: 2 },
                        { field: 'Id', title: 'Id', hidden: true, type: 'text', rowspan: 2 },
                        { field: 'Linage', title: '行號', hidden: false, type: 'string', rowspan: 2 },
                        {
                            field: 'AccNo', title: '科目編號', hidden: false, type: 'string', rowspan: 2,
                            editor: {
                                type: 'textbox',
                                options: {
                                    icons: [{
                                        iconCls: 'icon-search',
                                        handler: function (e) {
                                            dlgEditAccNo();
                                        }
                                    }]
                                }
                            }
                        },
                        { field: 'AccNameC', title: '科目名稱', hidden: false, type: 'string' }, //format1
                        { field: 'DCTypeNo', title: '借貸方向', hidden: false, type: 'string' }, //format2
                        { field: 'CurrencyNo', title: '交易幣別', hidden: false, type: 'string' },//format3
                        {
                            field: 'Rate1', title: '匯率', hidden: false, type: 'string', rowspan: 2,
                            editor: {
                                type: 'numberbox',
                                options: {
                                    precision: 3,  // 保留小數點後兩位
                                    min: 0,        // 最小值設置為 0 或其他合適的值
                                    //max: 999999,   // 最大值設置為一個合理的數值
                                    //groupSeparator: ',',  // 設置數字分隔符
                                    decimalSeparator: '.', // 設置小數點分隔符
                                    onChange: function (newValue, oldValue) {
                                        updateMoney1(newValue);
                                    }
                                }
                            }
                        },
                        { field: 'Money', title: '交易金額', hidden: false, type: 'number' },//format4
                        { field: 'TargetId', title: '對象別Id', hidden: true, type: 'string', rowspan: 2, },
                        {
                            field: 'TargetType', title: '對象別', hidden: false, type: 'string', rowspan: 2, formatter: formatTargetType,
                            editor: {
                                type: 'combogrid',
                                options: {
                                    panelWidth: 200,  // 可以根據需要調整寬度
                                    idField: 'TargetType',
                                    textField: 'TargetTypeName',
                                    mode: 'remote',
                                    loader: function (param, success, error) {
                                        objdata({ name: 'TargetType' }, 'read', function (objtype) {
                                            if (objtype.data) {
                                                success(objtype.data);
                                            }
                                        });
                                    },
                                    columns: [[
                                        { field: 'TargetType', title: '編號', width: 97 },
                                        { field: 'TargetTypeName', title: '名稱', width: 97 }
                                    ]],
                                    panelHeight: 'auto',
                                    onSelect: function (index, row) {
                                        // 檢查 itemdgIndex
                                        if (itemdgIndex === -1) {
                                            $.messager.alert(msglang.Title3, msglang.MsgSelectRow);
                                            return;
                                        }
                                        // 更新 itemdg 中的编辑行
                                        itemdg.datagrid('updateRow', {
                                            index: itemdgIndex,
                                            row: {
                                                TargetNo: '',
                                                TargetAbbr: ''
                                            }
                                        });
                                        // 结束编辑状态
                                        itemdg.datagrid('endEdit', itemdgIndex);

                                        // 如果需要继续编辑，可以立即重新开始编辑
                                        itemdg.datagrid('beginEdit', itemdgIndex);
                                    }
                                }
                            }
                        },
                        { field: 'TargetNo', title: '對象編號', hidden: false, type: 'string' },//format5
                        { field: 'AccProfitId', title: '會計部門Id', hidden: true, type: 'string', rowspan: 2, },
                        { field: 'AccProfitNo', title: '會計部門編號', hidden: false, type: 'string' },//format6
                        { field: 'AccDeptId', title: '成本中心Id', hidden: true, type: 'string', rowspan: 2, },
                        { field: 'AccDeptNo', title: '成本中心編號', hidden: false, type: 'string' }, //format7
                        { field: 'PayDeptId', title: '支付部門Id', hidden: true, type: 'string', rowspan: 2, },
                        { field: 'PayDeptNo', title: '支付部門編號', hidden: false, type: 'string' },//format8
                        { field: 'CheckType', title: '票據Type', hidden: true, type: 'string', rowspan: 2, },
                        { field: 'CheckId', title: '票據Id', hidden: true, type: 'string', rowspan: 2, },
                        {
                            field: 'CheckNo', title: '票據編號', hidden: false, type: 'string', rowspan: 2, editor: {
                                type: 'text',
                            }
                        },
                        { field: 'OffsetNo', title: '立沖編號', hidden: false, type: 'string' },//format9
                        { field: 'SourceDocId', title: '來源單DocId', hidden: true, type: 'string', rowspan: 2, },
                        { field: 'SourceSeqId', title: '來源單SeqId', hidden: true, type: 'string', rowspan: 2, },
                        { field: 'SourceDocSubTypeName', title: '來源單別', hidden: false, type: 'string' },//format10
                        { field: 'InitialProjectId', title: '原始單ProjectId', hidden: true, type: 'string', rowspan: 2, },
                        { field: 'InitialDocSubType', title: '原始單DocSubType', hidden: true, type: 'string', rowspan: 2, },
                        { field: 'InitialDocId', title: '原始單DocId', hidden: true, type: 'string', rowspan: 2, },
                        { field: 'InitialDocSubTypeName', title: '原始單別', hidden: false, type: 'string' },//format11
                        {
                            field: 'ActivityType', title: '活動類別', hidden: false, type: 'string', rowspan: 2,
                            editor: {
                                type: 'combobox',
                                options: {
                                    panelWidth: 200,
                                    url: defaultUrl + controllerurl + functionurl +'GetEditTableCode7',
                                    valueField: 'ActivityType',
                                    textField: 'ActivityType',
                                    mode: 'remote',
                                }
                            }
                        },
                    ],
                    [
                        { field: 'Remark', title: '摘要說明', type: 'string', formatter: format1 }, //format1
                        { field: 'DCTypeNameC', title: '借貸名稱', type: 'string', formatter: format2 },//format2
                        { field: 'CurrencySt', title: '記帳幣別', type: 'string', formatter: format3 },//format3
                        { field: 'Money1', title: '記帳金額', hidden: false, type: 'number', formatter: format4 },//format4
                        { field: 'TargetAbbr', title: '對象名稱', hidden: false, type: 'string', formatter: format5 },//format5
                        { field: 'AccProfitName', title: '會計部門名稱', hidden: false, type: 'string', formatter: format6 },//format6
                        { field: 'AccDeptName', title: '成本中心名稱', hidden: false, type: 'string', formatter: format7 },//format7
                        { field: 'PayDeptName', title: '支付部門名稱', hidden: false, type: 'string', formatter: format8 },//format8
                        { field: 'CaseBillNo', title: '專案編號', hidden: false, type: 'string', formatter: format9 },//format9
                        { field: 'SourceNo', title: '來源單號', hidden: false, type: 'string', formatter: format10 },//format10
                        { field: 'InitialNo', title: '原始單號', hidden: false, type: 'string', formatter: format11 },//format11
                    ]
                ],
                onClickRow: function (index, row) {
                    if (actioncode === 'edit' || actioncode === 'add') {
                        itemdg.datagrid('beginEdit', index); //啟用編輯
                        itemdgIndex = index; // 更新當前行索引
                        voucherDC();
                    }
                },
                onBeforeEdit: function (index, row) {
                    if (actioncode === 'edit' || actioncode === 'add') {
                        // 如果上一行正在編輯，結束它的編輯狀態
                        if (itemdgIndex !== undefined && itemdgIndex !== index) {
                            itemdg.datagrid('endEdit', itemdgIndex);
                        }
                    }
                },
                onAfterEdit: function (index, row, changes) {
                    if (actioncode === 'edit' || actioncode === 'add') {
                        // 使用 updateRow 更新數據源
                        itemdg.datagrid('updateRow', { index: index, row: row });
                        // 刷新該行以應用格式化並重構編輯狀態
                        itemdg.datagrid('refreshRow', index);
                        voucherDC();
                        // 重置當前的編輯行索引
                        itemdgIndex = undefined;
                    }
                },
                onCancelEdit: function (index, row) {
                    if (actioncode === 'edit' || actioncode === 'add') {
                        itemdgIndex = undefined; // 重置索引
                    }
                },
                onRowContextMenu: function (e, index, row) {
                    if (actioncode === 'edit' || actioncode === 'add') {
                        $('#mm').menu('show', {
                            left: e.pageX,
                            top: e.pageY
                        });
                        e.preventDefault();
                    }
                }
            });
        }
        function itemdgData(webdocid) {
            actionurl = defaultUrl + controllerurl + functionurl + 'GetVoucherItem?webdocid=' + webdocid;
            doajax("GET", actionurl, null, function (result) {
                if (result.success) {
                    itemdg.datagrid('loadData', result.data);
                    // VoucherDC計算
                    voucherDC();
                } else {
                    $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                    if (result.code == 'C0004') {
                        console.log(result.err);
                    }
                    itemdg.datagrid('loadData', '');
                }
            });
        }

        ///----- dlg_dg -----///
        function dlgdg1Set() {
            try {
                // 配置 datagrid
                dlgdg1.datagrid({
                    singleSelect: true,
                    striped: true,
                    columns: [[
                        { field: 'AccNo', title: '科目編號', type: 'string', sortable: true },
                        { field: 'AccNameC', title: '科目中文名稱', type: 'string', sortable: true },
                        { field: 'AccNoBy', title: '科目分類編號', type: 'string', sortable: true },
                        { field: 'AccNoByNameC', title: '科目分類中文名稱', type: 'string', sortable: true },
                        { field: 'AccGroupNo', title: '科目大類編號', type: 'string', sortable: true },
                        { field: 'AccGroupNameC', title: '科目大類中文名稱', type: 'string', sortable: true }
                    ]],
                    toolbar: '#toolbar1',
                    fitColumns: true,
                    onLoadSuccess: function (data) {
                        try {
                            $(this).datagrid('enableFilter');
                        } catch (error) {
                            console.error('dlgdg1_Filter error::', error);
                        }
                    }
                });
            } catch (error) {
                console.error('dlgdg1_Initialize error::', error);
            }

        }
        function dlgdg2Set() {
            // 配置datagrid
            dlgdg2.datagrid({
                singleSelect: true,
                striped: true,
                columns: [[
                    { field: 'CurrencyNo', title: '幣別', type: 'string', sortable: true },
                    { field: 'Rate', title: 'Rate', type: 'string',hidden:true},
                ]],
                fitColumns: true,
                onClickRow: function (index, row) {
                    // 將值填入itemdg並更新行
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            CurrencyNo: row.CurrencyNo,
                            Rate1: row.Rate

                        }
                    });

                    // 關閉對話框
                    $('#dlgEditCurrencyNo').dialog('close');
                }
            });
        }
        function dlgdg3Set() {
            dlgdg30.datagrid({
                singleSelect: true,
                striped: true,
                columns: [[
                    { field: 'Id', title: 'Id', width: 0, hidden: true, type: 'number'},
                    { field: 'PartnerNo', title: '廠商編號', width: 100, hidden: false },
                    { field: 'PartnerAbbr', title: '廠商簡稱', width: 100, hidden: false },
                    { field: 'PartnerName', title: '廠商名稱', width: 100, hidden: false },
                    { field: 'EmpNo', title: '負責採購', width: 100, hidden: false },
                    { field: 'EmpNameC', title: '採購名稱', width: 100, hidden: false },
                    { field: 'Tel1', title: '電話1', width: 100, hidden: false },
                    { field: 'Tel2', title: '電話2', width: 100, hidden: false },
                    { field: 'VatNo', title: '統一編號', width: 100, hidden: false },
                    { field: 'AreaName', title: '廠商地區', width: 100, hidden: false },
                    { field: 'ClassName', title: '廠商分類', width: 100, hidden: false },
                    { field: 'Grade', title: '廠商等級', width: 100, hidden: false },
                    { field: 'Addr', title: '廠商地址', width: 100, hidden: false },
                    {
                        field: 'IsStatus', title: '停止往來', width: 100, hidden: false, formatter: function (value, row, index) {
                            return '<input type="checkbox"' + (value ? ' ' : ' checked') + ' readonly>';
                        }
                    }
                ]],
                toolbar: '#toolbar30',
                fitColumns: true,
                onLoadSuccess: function (data) {
                    try {
                        $(this).datagrid('enableFilter');
                    } catch (error) {
                        console.error('dlgdg30_Filter error::', error);
                    }
                }
            });
            dlgdg31.datagrid({
                singleSelect: true,
                striped: true,
                columns: [[
                    { field: 'Id', title: 'Id', width: 100, hidden: true, type: 'number'},
                    { field: 'PartnerNo', title: '客戶編號', width: 100, hidden: false },
                    { field: 'PartnerAbbr', title: '客戶簡稱', width: 100, hidden: false },
                    { field: 'PartnerName', title: '客戶名稱', width: 100, hidden: false },
                    { field: 'EmpNo', title: '負責業務', width: 100, hidden: false },
                    { field: 'EmpNameC', title: '業務名稱', width: 100, hidden: false },
                    { field: 'Tel1', title: '電話1', width: 100, hidden: false },
                    { field: 'Tel2', title: '電話2', width: 100, hidden: false },
                    { field: 'VatNo', title: '統一編號', width: 100, hidden: false },
                    { field: 'AreaName', title: '客戶地區', width: 100, hidden: false },
                    { field: 'ClassName', title: '客戶分類', width: 100, hidden: false },
                    { field: 'Grade', title: '客戶等級', width: 100, hidden: false },
                    { field: 'Addr', title: '客戶地址', width: 100, hidden: false },
                    {
                        field: 'IsStatus', title: '停止往來', width: 100, hidden: false, formatter: function (value, row, index) {
                            return '<input type="checkbox"' + (value ? ' ' : ' checked') + ' readonly>';
                        }
                    }
                ]],
                toolbar: '#toolbar31',
                fitColumns: true,
                onLoadSuccess: function (data) {
                    try {
                        $(this).datagrid('enableFilter');
                    } catch (error) {
                        console.error('dlgdg31_Filter error::', error);
                    }
                }
            });
            dlgdg32.datagrid({
                singleSelect: true,
                striped: true,
                columns: [[
                    { field: 'Id', title: 'Id', width: 100, hidden: true, type: 'number' },
                    { field: 'DeptId', title: 'DeptId', width: 100, hidden: true },
                    { field: 'EmpNo', title: '員工編號', width: 100, hidden: false },
                    { field: 'EmpNameC', title: '中文名稱', width: 100, hidden: false },
                    { field: 'EmpNameE', title: '英文名稱', width: 100, hidden: false },
                    { field: 'DeptNo', title: '部門編號', width: 100, hidden: false },
                    { field: 'DeptName', title: '部門名稱', width: 100, hidden: false },
                    { field: 'Title', title: '職稱', width: 100, hidden: false },
                    { field: 'JobType', title: '任職狀況', width: 100, hidden: false }
                ]],
                toolbar: '#toolbar32',
                fitColumns: true,
                onLoadSuccess: function (data) {
                    try {
                        $(this).datagrid('enableFilter');
                    } catch (error) {
                        console.error('dlgdg32_Filter error:', error);
                    }
                }
            });
            dlgdg33.datagrid({
                singleSelect: true,
                striped: true,
                columns: [[
                    { field: 'Id', title: 'Id', width: 100, hidden: true, type: 'number'},
                    { field: 'Code', title: '銀行代碼', width: 100, hidden: false },
                    { field: 'BankCode', title: '銀行行號', width: 100, hidden: false },
                    { field: 'BankAbbr', title: '銀行簡稱', width: 100, hidden: false },
                    { field: 'AccountNo', title: '帳戶帳號', width: 100, hidden: false },
                    { field: 'AccountNameC', title: '帳戶中文名稱', width: 100, hidden: false },
                    { field: 'AccountNameE', title: '帳戶英文名稱', width: 100, hidden: false },
                    { field: 'AccNoAbbr', title: '帳戶簡稱', width: 100, hidden: false }
                ]],
                toolbar: '#toolbar33',
                fitColumns: true,
                onLoadSuccess: function (data) {
                    try {
                        $(this).datagrid('enableFilter');
                    } catch (error) {
                        console.error('dlgdg33_Filter error::', error);
                    }
                }
            });
        }
        function dlgdg4Set() {
            try {

                // 配置datagrid
                dlgdg4.datagrid({
                    singleSelect: true,
                    striped: true,
                    columns: [[
                        { field: 'DocId', title: 'DocId', type: 'string', hidden: true },
                        { field: 'Id', title: 'Id', type: 'number', hidden: true },
                        { field: 'DeptNo', title: '成本中心編號', type: 'string', hidden: false },
                        { field: 'DeptNameC', title: '成本中心中文', type: 'string', hidden: false },
                        { field: 'DeptNameE', title: '成本中心英文', type: 'string', hidden: false },
                        { field: 'CostLevel', title: 'CostLevel', type: 'string', hidden: true },
                    ]],
                    fitColumns: true,
                    onLoadSuccess: function (data) {
                        $(this).datagrid('enableFilter');
                    }
                });
            } catch (error) {
                console.error('初始化 datagrid 时出错:', error);
            }
        }
        function dlgdg5Set() {
            try {

                // 配置datagrid
                dlgdg5.datagrid({
                    singleSelect: true,
                    striped: true,
                    columns: [[
                        { field: 'DocId', title: 'DocId', type: 'string', hidden: true },
                        { field: 'Id', title: 'Id', type: 'number', hidden: true },
                        { field: 'DeptNo', title: '部門編號', type: 'string', hidden: false },
                        { field: 'TargetNameC', title: '中心中文名', type: 'string', hidden: false },
                        { field: 'TargetNameE', title: '中心英文名', type: 'string', hidden: false },
                        { field: 'DeptNameC', title: '部門中文名稱', type: 'string', hidden: false },
                        { field: 'DeptNameE', title: '部門英文名稱', type: 'string', hidden: false },
                    ]],
                    fitColumns: true,
                    onLoadSuccess: function (data) {
                        $(this).datagrid('enableFilter');
                    }
                });
            } catch (error) {
                console.error('初始化 datagrid 时出错:', error);
            }
        }
        //#endregion

        //#region 按鈕動作&狀態
        function btnClick(type) {
            let nowindex, row;
            switch (type) {
                //#region toolbar_maindg導覽&搜尋
                case 'first':
                    maindg.datagrid('selectRow', 0);
                    break;
                case 'previous':
                    row = maindg.datagrid('getSelected');
                    if (row) {
                        nowindex = maindg.datagrid('getRowIndex', row);
                    } else if (maindgindex >= 0) {
                        nowindex = maindgindex;
                    } else {
                        let rows = maindg.datagrid('getRows');
                        if (rows) {
                            nowindex = 0;
                        }
                    }
                    maindg.datagrid('selectRow', nowindex - 1);
                    break;
                case 'next':
                    row = maindg.datagrid('getSelected');
                    if (row) {
                        nowindex = maindg.datagrid('getRowIndex', row);
                    } else if (maindgindex >= 0) {
                        nowindex = maindgindex;
                    } else {
                        let rows = maindg.datagrid('getRows');
                        if (rows) {
                            nowindex = -1;
                        }
                    }
                    maindg.datagrid('selectRow', nowindex + 1);
                    break;
                    break;
                case 'last':
                    row = maindg.datagrid('getRows');
                    if (row) {
                        index = row.length;
                    }
                    maindg.datagrid('selectRow', index - 1);
                    break;
                case 'search':
                    break;
                //#endregion

                //#region toolbar_itemdg資料動作
                case 'add':
                    actioncode = 'add'; //狀態碼
                    btnEnableSet(actioncode);
                    infotabs.tabs('select', 1); //表頭表單切換
                    advtabs.tabs('select', 1); //進階資訊切換
                    maindg.datagrid('unselectRow', maindgIndex);
                    addForm(); //格式化、下拉選單初始化、預設欄位填值
                    itemdg.datagrid('loadData', { total: 0, rows: [] });//itemdg資料清空
                    $('.colMoneyD').textbox('setValue', '');
                    $('.colMoneyC').textbox('setValue', '');
                    $('.colMoney').textbox('setValue', '');
                    break;
                case 'edit':
                    row = maindg.datagrid('getSelected');
                    if (row != null) {
                        if (row.IsChecked == true) {
                            alert("此傳票無法編輯");
                        } else {
                            actioncode = 'edit';
                            btnEnableSet(actioncode);
                        }
                    } else {
                        alert("請選擇傳票進行編輯");
                    }
                    break;
                case 'save':
                    let maindata ; //表頭
                    let infodata = []; //表身
                    let data = [];
                    let dosave ; //檢查是否能存
                    let maindatadg, infodatadg;

                    if (actioncode === 'add') {
                        dosave = saveCheck(actioncode);
                        if (dosave) {
                            maindata = {
                                'BillDate': $('.fomBillDate').textbox('getValue'),
                                'DocSubType': $('.fomDocSubType').textbox('getValue'),
                                'DocSubTypeName': $('.fomDocSubTypeName').textbox('getValue'),
                                'CompId': $('.fomCompNo').textbox('getValue'),
                                'CompNo': $('.fomCompNo').textbox('getText'),
                                'CompAbbr': $('.fomCompAbbr').textbox('getValue'),
                                'VoucherType': $('.fomVoucherType').textbox('getValue'),
                                'VoucherNameC': $('.fomVoucherNameC').textbox('getValue'),
                                'EmpNo': $('.fomEmpNo').textbox('getValue'),
                                'EmpNameC': $('.fomEmpNameC').textbox('getValue'),
                                'DeptNo': $('.fomDeptNo').textbox('getValue'),
                                'DeptName': $('.fomDeptName').textbox('getValue'),
                                'BillNo': $('.fomBillNo').textbox('getValue'),
                                'CurrencyNo': $('.fomCurrencyNo').textbox('getValue'),
                                'CurrencySt': $('.fomCurrencySt').textbox('getValue'),
                                'Rate1': $('.fomRate1').textbox('getValue'),
                               /* 'Currency2': $('.fomCurrency2').textbox('getValue'),*/
                                /*'Rate2': $('.fomRate2').textbox('getValue'),*/
                                'TargetNo': $('.fomTargetNo').textbox('getValue')
                            };
                            infodatadg = itemdg.datagrid('getRows')
                            infodata = infodatadg.map(function (row) {
                                return {
                                    'Id': row.Id,
                                    'Linage': row.Linage,
                                    'AccNo': row.AccNo,
                                    'AccNameC': row.AccNameC,
                                    'DCTypeNo': row.DCTypeNo,
                                    'DCTypeNameC': row.DCTypeNameC,
                                    'CurrencyNo': row.CurrencyNo,
                                    'CurrencySt': row.CurrencySt,
                                    'Rate1': row.Rate1,
                                    'Money': row.Money,
                                    'Money1': row.Money1,
                                    'TargetId': row.TargetId,
                                    'TargetType': row.TargetType,
                                    'TargetNo': row.TargetNo,
                                    'TargetAbbr': row.TargetAbbr,
                                    'AccProfitId': row.AccProfitId,
                                    'AccProfitNo': row.AccProfitNo,
                                    'AccProfitName': row.AccProfitName,
                                    'AccDeptId': row.AccDeptId,
                                    'AccDeptNo': row.AccDeptNo,
                                    'AccDeptName': row.AccDeptName,
                                    'PayDeptId': row.PayDeptId,
                                    'PayDeptNo': row.PayDeptNo,
                                    'PayDeptName': row.PayDeptName,
                                    'CheckType': row.CheckType,
                                    'CheckId': row.CheckId,
                                    'CheckNo': row.CheckNo,
                                    'OffsetNo': row.OffsetNo,
                                    'SourceDocId': row.SourceDocId,
                                    'SourceSeqId': row.SourceSeqId,
                                    'SourceDocSubTypeName': row.SourceDocSubTypeName,
                                    'SourceNo': row.SourceNo,
                                    'InitialProjectId': row.InitialProjectId,
                                    'InitialDocSubType': row.InitialDocSubType,
                                    'InitialDocId': row.InitialDocId,
                                    'InitialDocSubTypeName': row.InitialDocSubTypeName,
                                    'InitialNo': row.InitialNo,
                                    'ActivityType': row.ActivityType,
                                    'Remark': row.Remark,
                                    'CaseBillNo': row.CaseBillNo,
                                };
                            });

                            data = {
                                Maindata: maindata,
                                Infodata: infodata
                            };

                            actionurl = defaultUrl + controllerurl + functionurl + 'AddData';
                            $.ajax({
                                type: "POST",
                                url: actionurl,
                                data: JSON.stringify(data),
                                contentType: "application/json",
                                dataType: "json",
                                success: function (response) {
                                    if (response.success) {
                                        $.messager.alert(msglang.Title2, '資料已成功儲存!');
                                        //頁面重載
                                    } else {
                                        $.messager.alert(msglang.Title2, MsgErrCode + response.code);
                                        if (result.code == 'C0004') {
                                            console.log(result.err);
                                        }
                                    }
                                },
                                error: function (xhr, status, errorThrown) {
                                    $.messager.alert(msglang.Title2, '儲存資料時發生錯誤!');
                                    console.error(status, errorThrown);
                                }
                            });
                        } else {
                            $.messager.alert(msglang.Title2, '請檢查欄位是否輸入或借貸平衡!');
                        }
                    }
                    if (actioncode === 'edit') {
                        dosave = saveCheck(actioncode);
                        if (dosave) {
                            maindatadg = maindg.datagrid('getRows')[maindgIndex]
                            maindata = {
                                'BillDate': maindatadg.BillDate,
                                'DocSubType': maindatadg.DocSubType,
                                'DocSubTypeName': maindatadg.DocSubTypeName,
                                'CompNo': maindatadg.CompNo,
                                'CompAbbr': maindatadg.CompAbbr,
                                'VoucherType': maindatadg.VoucherType,
                                'VoucherNameC': maindatadg.VoucherNameC,
                                'EmpNo': maindatadg.EmpNo,
                                'EmpNameC': maindatadg.EmpNameC,
                                'DeptNo': maindatadg.DeptNo,
                                'DeptNam': maindatadg.DeptName,
                                'BillNo': maindatadg.BillNo,
                                'CurrencyNo': maindatadg.CurrencyNo,
                                'CurrencyTw1': maindatadg.CurrencyTw1,
                                'Rate1': maindatadg.Rate1,
                                'CurrencyTw2': maindatadg.CurrencyTw2,
                                'Rate2': maindatadg.Rate2,
                                'TargetNo': maindatadg.TargetNo,
                            };
                            infodatadg = itemdg.datagrid('getRows')
                            infodata = infodatadg.map(function (row) {
                                return {
                                    'WebId': row.WebId,
                                    'Id': row.Id,
                                    'Linage': row.Linage,
                                    'AccNo': row.AccNo,
                                    'AccNameC': row.AccNameC,
                                    'DCTypeNo': row.DCTypeNo,
                                    'DCTypeNameC': row.DCTypeNameC,
                                    'CurrencyNo': row.CurrencyNo,
                                    'CurrencyNoNote': row.CurrencyNoNote,
                                    'Rate1': row.Rate1,
                                    'Money': row.Money,
                                    'Money1': row.Money1,
                                    'TargetId': row.TargetId,
                                    'TargetType': row.TargetType,
                                    'TargetNo': row.TargetNo,
                                    'TargetAbbr': row.TargetAbbr,
                                    'AccProfitId': row.AccProfitId,
                                    'AccProfitNo': row.AccProfitNo,
                                    'AccProfitName': row.AccProfitName,
                                    'AccDeptId': row.AccDeptId,
                                    'AccDeptNo': row.AccDeptNo,
                                    'AccDeptName': row.AccDeptName,
                                    'PayDeptId': row.PayDeptId,
                                    'PayDeptNo': row.PayDeptNo,
                                    'PayDeptName': row.PayDeptName,
                                    'CheckType': row.CheckType,
                                    'CheckId': row.CheckId,
                                    'CheckNo': row.CheckNo,
                                    'OffsetNo': row.OffsetNo,
                                    'SourceDocId': row.SourceDocId,
                                    'SourceSeqId': row.SourceSeqId,
                                    'SourceDocSubTypeName': row.SourceDocSubTypeName,
                                    'SourceNo': row.SourceNo,
                                    'InitialProjectId': row.InitialProjectId,
                                    'InitialDocSubType': row.InitialDocSubType,
                                    'InitialDocId': row.InitialDocId,
                                    'InitialDocSubTypeName': row.InitialDocSubTypeName,
                                    'InitialNo': row.InitialNo,
                                    'ActivityType': row.ActivityType,
                                    'Remark': row.Remark,
                                    'CaseBillNo': row.CaseBillNo,
                                };
                            });
                            data = {
                                Maindata: maindata,
                                Infodata: infodata
                            };

                            actionurl = defaultUrl + controllerurl + functionurl + 'EditData';
                            $.ajax({
                                type: "POST",
                                url: actionurl,
                                data: JSON.stringify(data),
                                contentType: "application/json",
                                dataType: "json",
                                success: function (response) {
                                    $.messager.alert(msglang.Title2, '資料已成功儲存!');
                                    console.log(response);
                                },
                                error: function (xhr, status, errorThrown) {
                                    $.messager.alert(msglang.Title2, '儲存資料時發生錯誤!');
                                    console.error("Status: " + status);
                                    console.error("Error: " + errorThrown);
                                    console.error("Response: " + xhr.responseText);
                                }
                            });
                        } else {
                            $.messager.alert(msglang.Title2, '請檢查欄位是否輸入或借貸平衡!');
                        }
                    }
                    if (actioncode != 'add' && actioncode != 'edit') {
                        actioncode = 'view';
                        btnEnableSet(actioncode);
                        $.messager.alert(msglang.Title2, msglang.MsgActionErr);
                    }
                    break;
                case 'refresh':
                    break;
                case 'cancel':
                    if (actioncode == 'add') {
                        $.messager.confirm(msglang.Title1, '是否要取消?', function (r) {
                            if (r) {
                                //addForm欄位清空
                                $('#addForm .easyui-datebox').datebox('clear');
                                $('#addForm .easyui-combogrid').combogrid('clear');
                                $('#addForm .easyui-textbox').textbox('clear');
                                //表身清空
                                itemdg.datagrid('loadData', { total: 0, rows: [] });
                                infotabs.tabs('select', 0);//表頭表單切換
                                advtabs.tabs('select', 0);//進階資訊切換
                                maindg.datagrid('selectRow', maindgIndex);//還原原先選擇列
                                actioncode = 'view';
                                btnEnableSet(actioncode);
                            } else {
                                return;
                            }
                        });
                    } else if (actioncode == 'edit') {
                        $.messager.confirm(msglang.Title1, '是否要取消?', function (r) {
                            if (r) {
                                maindg.datagrid('selectRow', maindgIndex);//還原原先選擇列
                                itemdg.datagrid('endEdit', itemdgIndex);
                                actioncode = 'view';
                                btnEnableSet(actioncode);
                            } else {
                                return;
                            }
                        });
                    }

                    break;
                case 'delete':
                    break;
                case 'lock':
                    row = maindg.datagrid('getSelected');
                    if (row != null) {
                        if (actioncode == 'add' || actioncode == 'edit') {
                            $.messager.alert(msglang.Title2, '請先存檔，再覆核。');
                            return;
                        }
                        $.messager.confirm(msglang.Title1, '是否覆核?', function (r) {
                            if (r) {
                                actionurl = defaultUrl + controllerurl + functionurl + 'VoucherStatus?webid=' + row.WebId +'&type=lock';
                                doajax("POST", actionurl, null, function (result) {
                                    if (result.success) {
                                        $.messager.alert(msglang.Title2, '單號：' + result.data + '已覆核。');
                                    } else {
                                        $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                                        if (result.code == 'C0004') {
                                            console.log(result.err);
                                        }
                                        itemdg.datagrid('loadData', '');
                                    }
                                });
                            } else {
                                return;
                            }
                        });
                    } else {
                        $.messager.alert(msglang.Title2, "請選擇傳票進行覆核");
                    }

                    break;
                //#endregion

                //#region dlg_按鈕動作
                case 'dlgdg1insert':                    
                    var selectedRow = dlgdg1.datagrid('getSelected');
                    if (!selectedRow) {
                        $.messager.alert(msglang.Title3, '請選擇資料填入！');
                        return;
                    }

                    // 檢查 itemdgIndex
                    if (itemdgIndex === -1) {
                        $.messager.alert(msglang.Title3, msglang.MsgSelectRow);
                        return;
                    }

                    if (actioncode === 'add' || actioncode === 'edit') {
                        itemdg.datagrid('updateRow', {
                            index: itemdgIndex,
                            row: {
                                AccNo: selectedRow.AccNo,
                                AccNameC: selectedRow.AccNameC,
                                AccNoBy: selectedRow.AccNoBy,
                                AccNoByNameC: selectedRow.AccNoByNameC,
                                AccGroupNo: selectedRow.AccGroupNo,
                                AccGroupNameC: selectedRow.AccGroupNameC,
                                Remark: '',
                                DCTypeNo: selectedRow.DCTypeNo,
                                DCTypeNameC: selectedRow.DCTypeNameC,                                                          
                               
                            }
                        });
                    }

                    $('#dlgEditAccNo').dialog('close');
                    break;
                case 'dlgdg1exit':
                    $('#dlgEditAccNo').dialog('close');
                    break;
                case 'dlgdg30insert':
                    var selectedRow = dlgdg30.datagrid('getSelected');
                    if (!selectedRow) {
                        $.messager.alert(msglang.Title3, '請選擇資料填入！');
                        return;
                    }
                    if (itemdgIndex === -1) {
                        $.messager.alert(msglang.Title3, msglang.MsgSelectRow);
                        return;
                    }
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            TargetNo: selectedRow.PartnerNo,
                            TargetAbbr: selectedRow.PartnerAbbr,
                        }
                    });
                    $('#dlgEditTargetNo').dialog('close');
                    break;
                case 'dlgdg31insert':
                    var selectedRow = dlgdg31.datagrid('getSelected');
                    if (!selectedRow) {
                        $.messager.alert(msglang.Title3, '請選擇資料填入！');
                        return;
                    }
                    if (itemdgIndex === -1) {
                        $.messager.alert(msglang.Title3, msglang.MsgSelectRow);
                        return;

                    }
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            TargetNo: selectedRow.PartnerNo,
                            TargetAbbr: selectedRow.PartnerAbbr,
                        }
                    });
                    $('#dlgEditTargetNo').dialog('close');
                    break;
                case 'dlgdg32insert':
                    var selectedRow = dlgdg32.datagrid('getSelected');
                    if (!selectedRow) {
                        $.messager.alert(msglang.Title3, '請選擇資料填入！');
                        return;
                    }
                    if (itemdgIndex === -1) {
                        $.messager.alert(msglang.Title3, msglang.MsgSelectRow);
                        return;

                    }
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            TargetNo: selectedRow.EmpNo,
                            TargetAbbr: selectedRow.EmpNameC,
                        }
                    });
                    $('#dlgEditTargetNo').dialog('close');
                    break;
                case 'dlgdg33insert':
                    var selectedRow = dlgdg33.datagrid('getSelected');
                    if (!selectedRow) {
                        $.messager.alert(msglang.Title3, '請選擇資料填入！');
                        return;
                    }
                    if (itemdgIndex === -1) {
                        $.messager.alert(msglang.Title3, msglang.MsgSelectRow);
                        return;

                    }
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            TargetNo: selectedRow.Code,
                            TargetAbbr: selectedRow.field,
                        }
                    });
                    $('#dlgEditTargetNo').dialog('close');
                    break;
                case 'dlgdg3exit':
                    $('#dlgEditTargetNo').dialog('close');
                    break;
                case 'dlgdg4insert':
                    var selectedRow = dlgdg4.datagrid('getSelected');
                    if (!selectedRow) {
                        $.messager.alert(msglang.Title3, '請選擇資料填入！');
                        return;
                    }
                    if (itemdgIndex === -1) {
                        $.messager.alert(msglang.Title3, msglang.MsgSelectRow);
                        return;
                    }
                    // 更新 itemdg 中的编辑行
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            AccDeptNo: selectedRow.DeptNo,
                            AccDeptName: selectedRow.DeptNameC,
                        }
                    });

                    $('#dlgEditAccDept').dialog('close');
                    break;
                case 'dlgdg4exit':
                    $('#dlgEditAccDept').dialog('close');
                    break;
                case 'dlgdg5insert':
                    var selectedRow = dlgdg5.datagrid('getSelected');
                    if (!selectedRow) {
                        $.messager.alert(msglang.Title3, '請選擇資料填入！');
                        return;
                    }
                    if (itemdgIndex === -1) {
                        $.messager.alert(msglang.Title3, msglang.MsgSelectRow);
                        return;
                    }
                    // 更新 itemdg 中的编辑行
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            PayDeptNo: selectedRow.DeptNo,
                            PayDeptName: selectedRow.DeptNameC,
                        }
                    });

                    $('#dlgEditPayDept').dialog('close');
                    break;
                case 'dlgdg5exit':
                    $('#dlgEditPayDept').dialog('close');
                    break;
                //#endregion
            }
        }
        function btnEnableSet(type) {
            switch (type) {
                case 'view':
                    $('#btnAdd').linkbutton('enable');
                    $('#btnEdit').linkbutton('enable');
                    $('#btnSave').linkbutton('disable');
                    $('#btnDetail').linkbutton('disable');
                    $('#btnRefresh').linkbutton('enable');
                    $('#btnCancel').linkbutton('disable');
                    $('#btnDelete').linkbutton('disable');
                    break;
                case 'add':
                    $('#btnAdd').linkbutton('disable');
                    $('#btnEdit').linkbutton('disable');
                    $('#btnSave').linkbutton('enable');
                    $('#btnDetail').linkbutton('disable');
                    $('#btnRefresh').linkbutton('disable');
                    $('#btnCancel').linkbutton('enable');
                    $('#btnDelete').linkbutton('disable');
                    break;
                case 'edit':
                    $('#btnAdd').linkbutton('disable');
                    $('#btnEdit').linkbutton('disable');
                    $('#btnSave').linkbutton('enable');
                    $('#btnDetail').linkbutton('disable');
                    $('#btnRefresh').linkbutton('disable');
                    $('#btnCancel').linkbutton('enable');
                    $('#btnDelete').linkbutton('disable');
                    break;
                case 'cancel':
                    break;
                default:
                    $('#btnAdd').linkbutton('enable');
                    $('#btnEdit').linkbutton('enable');
                    $('#btnSave').linkbutton('disable');
                    $('#btnDetail').linkbutton('disable');
                    $('#btnRefresh').linkbutton('enable');
                    $('#btnCancel').linkbutton('disable');
                    $('#btnDelete').linkbutton('disable');
                   

            }
        }
        //#endregion

        //#region 功能函式
        // 自定義doajax
        function doajax(type, url, data, successCallback, errorCallback) {
            $.ajax({
                type: type,
                url: url,
                data: data,
                success: function (response) {
                    if (typeof successCallback === 'function') {
                        successCallback(response);
                    }
                },
                error: function (xhr, status, errorThrown) {
                    if (typeof errorCallback === 'function') {
                        errorCallback(xhr, status, errorThrown);
                    }
                }
            });
        }

        // 表頭、進階資料、借貸平衡填值
        function tableHeadData(row) {
            $('.colBillDate').textbox('setValue', row.BillDate);
            $('.colDocSubType').textbox('setValue', row.DocSubType);
            $('.colDocSubTypeName').textbox('setValue', row.DocSubTypeName);
            $('.colCompNo').textbox('setValue', row.CompNo);
            $('.colCompAbbr').textbox('setValue', row.CompAbbr);
            $('.colVoucherType').textbox('setValue', row.VoucherType);
            $('.colVoucherNameC').textbox('setValue', row.VoucherNameC);
            $('.colEmpNo').textbox('setValue', row.EmpNo);
            $('.colEmpNameC').textbox('setValue', row.EmpNameC);
            $('.colDeptNo').textbox('setValue', row.DeptNo);
            $('.colDeptName').textbox('setValue', row.DeptName);
            $('.colBillNo').textbox('setValue', row.BillNo);
            $('.colCurrencyNo').textbox('setValue', row.CurrencyNo);
            $('.colCurrencySt').textbox('setValue', row.CurrencySt);
            $('.colRate1').textbox('setValue', row.Rate1);
            /* $('.colCurrency2').textbox('setValue',row.VoucherNameC);*/
            /* $('.colRate2').textbox('setValue', row.Rate2);*/
            $('.colTargetNo').textbox('setValue', row.TargetNo);
            //進階資料
            $('.colLedger').textbox('setValue', '帳簿1');
            $('.colCompNo').textbox('setValue', row.CompNo);
            $('.colCompAbbr').textbox('setValue', row.CompAbbr);
            $('.colAccDocType').textbox('setValue', row.AccDocType);
            $('.colSourceDocSubTypeName').textbox('setValue', row.SourceDocSubTypeName);
            $('.colActivityType').textbox('setValue', row.ActivityType);
            $('.colSourceNo').textbox('setValue', row.SourceNo);
            //借貸平衡
            $('.colCurrencyD').textbox('setValue', row.CurrencySt);
            $('.colCurrencyC').textbox('setValue', row.CurrencySt);
            $('.colCurrency').textbox('setValue', row.CurrencySt);
        }

        // 明細編輯
        function updateMoney1(newRate) {
            if (itemdgIndex !== undefined) {
                var row = itemdg.datagrid('getRows')[itemdgIndex];
                var newMoney1 = row.Money *  newRate;
                itemdg.datagrid('updateRow', {
                    index: itemdgIndex,
                    row: {
                        Rate1: newRate,
                        Money1: newMoney1
                    }
                });
            }
        }

        // 傳票借貸合計(使用記帳金額計算)
        function voucherDC() {
            let totalDMoney = 0;
            let totalCMoney = 0;
            let balance = 0;
            let rows = itemdg.datagrid('getRows');

            for (let i = 0; i < rows.length; i++) {
                if (rows[i].DCTypeNo === 'D') {
                    totalDMoney += parseFloat(rows[i].Money1);
                } else if (rows[i].DCTypeNo === 'C') {
                    totalCMoney += parseFloat(rows[i].Money1);
                }
            }
            balance = Math.abs(totalDMoney - totalCMoney);

            // 將計算後的值填入對應的 input 元素
            $('.colMoneyD').textbox('setValue', totalDMoney);
            $('.colMoneyC').textbox('setValue', totalCMoney);
            $('.colMoney').textbox('setValue', balance);
        }

        // addForm必填欄位
        function saveCheck(type) {
            let check1 = true; //表頭必填欄位
            let check2 = false;//借貸平衡

            // check1
            if (type === 'add') {
                let form = document.getElementById('addForm');
                let inputs = form.querySelectorAll('[required]');

                inputs.forEach(function (input) {
                    if (!input.value) {
                        check1 = false;
                        input.classList.add('error');
                    } else {
                        input.classList.remove('error');
                    }
                });
            } else if (type === 'edit') {
                check1 = true;
            }

            // check2
            voucherDC();
            let dcbalance = $('.colMoney').textbox('getValue');
            if (dcbalance == 0) {
                check2 = true;
            }

            // return
            if (check1 && check2 ) {
                return true;
            } else {
                return false;
            }
        }

        // 右鍵功能
        function menuHandler(item) {
            var rowCount, currentRow, newRow;
            switch (item.name) {
                case 'add':
                    rowCount = itemdg.datagrid('getRows').length;
                    // 先檢查 itemdg 是否被正確初始化
                    if (!itemdg) {
                        console.error('itemdg is not initialized');
                        return;
                    }
                    itemdg.datagrid('appendRow', {
                        Id: '', 
                        Linage: rowCount + 1,
                        AccNo: '',
                        AccNameC: '',
                        DCTypeNo: '',
                        CurrencyNo: $('.fomCurrencyNo').textbox('getValue'),
                        Rate1: $('.fomRate1').textbox('getValue'),
                        Money: 0,
                        TargetId: '',
                        TargetType: '',
                        TargetNo: '',
                        AccProfitId: '',
                        AccProfitNo: '',
                        AccDeptId: '',
                        AccDeptNo: '',
                        PayDeptId: '',
                        PayDeptNo: '',
                        CheckType: '',
                        CheckId: '',
                        CheckNo: '',
                        OffsetNo: '',
                        SourceDocId: '',
                        SourceSeqId: '',
                        SourceDocSubTypeName: '',
                        InitialProjectId: '',
                        InitialDocSubType: '',
                        InitialDocId: '',
                        InitialDocSubTypeName: '',
                        ActivityType: '',
                        Remark: '',
                        DCTypeNameC: '',
                        CurrencyNoNote: '',
                        Money1: 0,
                        TargetAbbr: '',
                        AccProfitName: '',
                        AccDeptName: '',
                        PayDeptName: '',
                        CaseBillNo: '',
                        SourceNo: '',
                        InitialNo: ''
                    });
                    var newIndex = itemdg.datagrid('getRows').length - 1;
                    itemdg.datagrid('selectRow', newIndex).datagrid('beginEdit', newIndex);
                    itemdgIndex = newIndex;
                    break;
                case 'addD':
                    rowCount = itemdg.datagrid('getRows').length;
                    // Append a new row with specific fields set for '借貸方向' and '借貸名稱'
                    itemdg.datagrid('appendRow', {
                        Id: '',
                        Linage: rowCount + 1,
                        AccNo: '',
                        AccNameC: '',
                        DCTypeNo: 'D', // Set '借貸方向' to 'D'
                        DCTypeNameC: '借', // Set '借貸名稱' to '借'
                        CurrencyNo: '',
                        Rate1: '',
                        Money: '',
                        TargetId: '',
                        TargetType: '',
                        TargetNo: '',
                        AccProfitId: '',
                        AccProfitNo: '',
                        AccDeptId: '',
                        AccDeptNo: '',
                        PayDeptId: '',
                        PayDeptNo: '',
                        CheckType: '',
                        CheckId: '',
                        CheckNo: '',
                        OffsetNo: '',
                        SourceDocId: '',
                        SourceSeqId: '',
                        SourceDocSubTypeName: '',
                        InitialProjectId: '',
                        InitialDocSubType: '',
                        InitialDocId: '',
                        InitialDocSubTypeName: '',
                        ActivityType: '',
                        Remark: '',
                        CurrencyNoNote: '',
                        Money1: '',
                        TargetAbbr: '',
                        AccProfitName: '',
                        AccDeptName: '',
                        PayDeptName: '',
                        CaseBillNo: '',
                        SourceNo: '',
                        InitialNo: ''
                    });
                    var newIndex = itemdg.datagrid('getRows').length - 1;
                    itemdg.datagrid('selectRow', newIndex).datagrid('beginEdit', newIndex);
                    itemdgIndex = newIndex;
                    break;
                case 'addC':
                    rowCount = itemdg.datagrid('getRows').length;
                    itemdg.datagrid('appendRow', {
                        Id: '',
                        Linage: rowCount + 1,
                        AccNo: '',
                        AccNameC: '',
                        DCTypeNo: 'C', // Set '借貸方向' to 'D'
                        DCTypeNameC: '貸', // Set '借貸名稱' to '借'
                        CurrencyNo: '',
                        Rate1: '',
                        Money: '',
                        TargetId: '',
                        TargetType: '',
                        TargetNo: '',
                        AccProfitId: '',
                        AccProfitNo: '',
                        AccDeptId: '',
                        AccDeptNo: '',
                        PayDeptId: '',
                        PayDeptNo: '',
                        CheckType: '',
                        CheckId: '',
                        CheckNo: '',
                        OffsetNo: '',
                        SourceDocId: '',
                        SourceSeqId: '',
                        SourceDocSubTypeName: '',
                        InitialProjectId: '',
                        InitialDocSubType: '',
                        InitialDocId: '',
                        InitialDocSubTypeName: '',
                        ActivityType: '',
                        Remark: '',
                        CurrencyNoNote: '',
                        Money1: '',
                        TargetAbbr: '',
                        AccProfitName: '',
                        AccDeptName: '',
                        PayDeptName: '',
                        CaseBillNo: '',
                        SourceNo: '',
                        InitialNo: ''
                    });
                    var newIndex = itemdg.datagrid('getRows').length - 1;
                    itemdg.datagrid('selectRow', newIndex).datagrid('beginEdit', newIndex);
                    itemdgIndex = newIndex;
                    break;
                case 'addReverse':
                    if (itemdgIndex == null || itemdgIndex < 0) {
                        $.messager.alert(msglang.Title2, '請先選擇一行進行操作');
                        return;
                    }
                    currentRow = itemdg.datagrid('getRows')[itemdgIndex];
                    // Determine the reverse values based on the current selection
                    if (currentRow.DCTypeNo === 'D') {
                        reverseDCTypeNo = 'C';
                        reverseDCTypeName = '貸';
                    } else if (currentRow.DCTypeNo === 'C') {
                        reverseDCTypeNo = 'D';
                        reverseDCTypeName = '借';
                    } else {
                        $.messager.alert(msglang.Title2, '當前行的借貸方向不正確');
                        return;
                    }
                    rowCount = itemdg.datagrid('getRows').length;
                    itemdg.datagrid('appendRow', {
                        Id: '',
                        Linage: rowCount + 1,
                        AccNo: currentRow.AccNo,
                        AccNameC: currentRow.AccNameC,
                        DCTypeNo: reverseDCTypeNo, // Reverse '借貸方向'
                        DCTypeNameC: reverseDCTypeName, // Update '借貸名稱' based on '借貸方向'
                        CurrencyNo: currentRow.CurrencyNo,
                        Rate1: currentRow.Rate1,
                        Money: currentRow.Money,
                        TargetId: currentRow.TargetId,
                        TargetType: currentRow.TargetType,
                        TargetNo: currentRow.TargetNo,
                        AccProfitId: currentRow.AccProfitId,
                        AccProfitNo: currentRow.AccProfitNo,
                        AccDeptId: currentRow.AccDeptId,
                        AccDeptNo: currentRow.AccDeptNo,
                        PayDeptId: currentRow.PayDeptId,
                        PayDeptNo: currentRow.PayDeptNo,
                        CheckType: currentRow.CheckType,
                        CheckId: currentRow.CheckId,
                        CheckNo: currentRow.CheckNo,
                        OffsetNo: currentRow.OffsetNo,
                        SourceDocId: currentRow.SourceDocId,
                        SourceSeqId: currentRow.SourceSeqId,
                        SourceDocSubTypeName: currentRow.SourceDocSubTypeName,
                        InitialProjectId: currentRow.InitialProjectId,
                        InitialDocSubType: currentRow.InitialDocSubType,
                        InitialDocId: currentRow.InitialDocId,
                        InitialDocSubTypeName: currentRow.InitialDocSubTypeName,
                        ActivityType: currentRow.ActivityType,
                        Remark: currentRow.Remark,
                        DCTypeNameC: currentRow.DCTypeNameC,
                        CurrencyNoNote: currentRow.CurrencyNoNote,
                        Money1: currentRow.Money1,
                        TargetAbbr: currentRow.TargetAbbr,
                        AccProfitName: currentRow.AccProfitName,
                        AccDeptName: currentRow.AccDeptName,
                        PayDeptName: currentRow.PayDeptName,
                        CaseBillNo: currentRow.CaseBillNo,
                        SourceNo: currentRow.SourceNo,
                        InitialNo: currentRow.InitialNo
                    });
                    var newIndex = itemdg.datagrid('getRows').length - 1;
                    itemdg.datagrid('selectRow', newIndex).datagrid('beginEdit', newIndex);
                    itemdgIndex = newIndex;
                    break;
                case 'remove':
                    if (itemdgIndex !== null) {
                        itemdg.datagrid('deleteRow', itemdgIndex);
                        rowCount = itemdg.datagrid('getRows').length;
                        for (var i = 0; i < rowCount; i++) {
                            itemdg.datagrid('updateRow', {
                                index: i,
                                row: {
                                    Linage: i + 1  // Start numbering from 1
                                }
                            });
                        }
                    } else {
                        $.messager.alert(msglang.Title2, '未選擇任何行刪除');
                    }
                    break;
                default:
                    break;
            }
        }

        // 編輯模式_DC快速填入與關閉視窗
        function dctypeChecked(type) {
            switch (type) {
                case "C":
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            DCTypeNo: 'C',
                            DCTypeNameC: '貸',
                        }
                    });

                    $('#dlgEditDCType').dialog('close');
                    voucherDC();
                    break;
                case "D":
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            DCTypeNo: 'D',
                            DCTypeNameC: '借',
                        }
                    });
                    $('#dlgEditDCType').dialog('close');
                    voucherDC();
                    break;
                default:
                    break;
            }
        }

        // obj資料操作
        function objdata(objtype, action, callback) {
            switch (objtype.name) {
                case 'AccNo':
                    if (action === 'clear') {
                        objtype.data = null;
                    } else if (action === 'read') {
                        if (objtype.data != null) {
                            if (callback) callback(objtype);
                        } else {
                            actionurl = defaultUrl + controllerurl + functionurl + 'GetEditTableCode';
                            doajax("GET", actionurl, null, function (result) {
                                if (result.success) {
                                    objtype.data = result.data;
                                } else {
                                    $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                                    objtype.data = null;
                                    if (result.code == 'C0003') {
                                        console.log("C0003: [AccNo] Not Found");
                                    }
                                    if (result.code == 'C0004') {
                                        console.log(result.err);
                                    }
                                }
                                if (callback) callback(objtype);
                            });
                        }
                    }
                    break;
                case 'CurrencyNo':
                    if (action === 'clear') {
                        objtype.data = null;
                    } else if (action === 'read') {
                        if (objtype.data != null) {
                            if (callback) callback(objtype);
                        } else {
                            actionurl = defaultUrl + controllerurl + functionurl + 'GetEditTableCode3';
                            doajax("GET", actionurl, null, function (result) {
                                if (result.success) {
                                    objtype.data = result.data;
                                } else {
                                    $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                                    objtype.data = null;
                                    if (result.code == 'C0003') {
                                        console.log("C0003: [AccNo] Not Found");
                                    }
                                    if (result.code == 'C0004') {
                                        console.log(result.err);
                                    }
                                }
                                if (callback) callback(objtype);
                            });
                        }
                    }
                    break;
                case 'AccDept':
                    if (action === 'clear') {
                        objtype.data = null;
                    } else if (action === 'read') {
                        if (objtype.data != null) {
                            if (callback) callback(objtype);
                        } else {
                            actionurl = defaultUrl + controllerurl + functionurl + 'GetEditTableCode5';
                            doajax("GET", actionurl, null, function (result) {
                                if (result.success) {
                                    objtype.data = result.data;
                                } else {
                                    $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                                    objtype.data = null;
                                    if (result.code == 'C0003') {
                                        console.log("C0003: [AccNo] Not Found");
                                    }
                                    if (result.code == 'C0004') {
                                        console.log(result.err);
                                    }
                                }
                                if (callback) callback(objtype);
                            });
                        }
                    }
                    break;
                case 'TargetNo0':
                    if (action === 'clear') {
                        objtype.data = null;
                    } else if (action === 'read') {
                        if (objtype.data != null) {
                            if (callback) callback(objtype);
                        } else {
                            actionurl = defaultUrl + controllerurl + functionurl + 'GetEditTableCode4?type=15';
                            doajax("GET", actionurl, null, function (result) {
                                if (result.success) {
                                    objtype.data = result.data;
                                } else {
                                    $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                                    objtype.data = null;
                                    if (result.code == 'C0003') {
                                        console.log("C0003: [AccNo] Not Found");
                                    }
                                    if (result.code == 'C0004') {
                                        console.log(result.err);
                                    }
                                }
                                if (callback) callback(objtype);
                            });
                        }
                    }
                    break;
                case 'TargetNo1':
                    if (action === 'clear') {
                        objtype.data = null;
                    } else if (action === 'read') {
                        if (objtype.data != null) {
                            if (callback) callback(objtype);
                        } else {
                            actionurl = defaultUrl + controllerurl + functionurl + 'GetEditTableCode4?type=14';
                            doajax("GET", actionurl, null, function (result) {
                                if (result.success) {
                                    objtype.data = result.data;
                                } else {
                                    $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                                    objtype.data = null;
                                    if (result.code == 'C0003') {
                                        console.log("C0003: [AccNo] Not Found");
                                    }
                                    if (result.code == 'C0004') {
                                        console.log(result.err);
                                    }
                                }
                                if (callback) callback(objtype);
                            });
                        }
                    }
                    break;
                case 'TargetNo2':
                    if (action === 'clear') {
                        objtype.data = null;
                    } else if (action === 'read') {
                        if (objtype.data != null) {
                            if (callback) callback(objtype);
                        } else {
                            actionurl = defaultUrl + controllerurl + functionurl + 'GetEditTableCode4?type=12';
                            doajax("GET", actionurl, null, function (result) {
                                if (result.success) {
                                    objtype.data = result.data;
                                } else {
                                    $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                                    objtype.data = null;
                                    if (result.code == 'C0003') {
                                        console.log("C0003: [AccNo] Not Found");
                                    }
                                    if (result.code == 'C0004') {
                                        console.log(result.err);
                                    }
                                }
                                if (callback) callback(objtype);
                            });
                        }
                    }
                    break;
                case 'TargetNo3':
                    if (action === 'clear') {
                        objtype.data = null;
                    } else if (action === 'read') {
                        if (objtype.data != null) {
                            if (callback) callback(objtype);
                        } else {
                            actionurl = defaultUrl + controllerurl + functionurl + 'GetEditTableCode4?type=65';
                            doajax("GET", actionurl, null, function (result) {
                                if (result.success) {
                                    objtype.data = result.data;
                                } else {
                                    $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                                    objtype.data = null;
                                    if (result.code == 'C0003') {
                                        console.log("C0003: [AccNo] Not Found");
                                    }
                                    if (result.code == 'C0004') {
                                        console.log(result.err);
                                    }
                                }
                                if (callback) callback(objtype);
                            });
                        }
                    }
                    break;
                case 'PayDept':
                    if (action === 'clear') {
                        objtype.data = null;
                    } else if (action === 'read') {
                        if (objtype.data != null) {
                            if (callback) callback(objtype);
                        } else {
                            actionurl = defaultUrl + controllerurl + functionurl + 'GetEditTableCode6';
                            doajax("GET", actionurl, null, function (result) {
                                if (result.success) {
                                    objtype.data = result.data;
                                } else {
                                    $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                                    objtype.data = null;
                                    if (result.code == 'C0003') {
                                        console.log("C0003: [AccNo] Not Found");
                                    }
                                    if (result.code == 'C0004') {
                                        console.log(result.err);
                                    }
                                }
                                if (callback) callback(objtype);
                            });
                        }
                    }
                    break;
                case 'TargetType':
                    if (action === 'clear') {
                        objtype.data = null;
                    } else if (action === 'read') {
                        if (objtype.data != null) {
                            if (callback) callback(objtype);
                        } else {
                            actionurl = defaultUrl + controllerurl + functionurl + 'GetEditTableCode2';
                            doajax("GET", actionurl, null, function (result) {
                                if (result.success) {
                                    objtype.data = result.data;
                                } else {
                                    $.messager.alert(msglang.Title2, msglang.MsgErrCode + result.code);
                                    objtype.data = null;
                                    if (result.code == 'C0003') {
                                        console.log("C0003: [AccNo] Not Found");
                                    }
                                    if (result.code == 'C0004') {
                                        console.log(result.err);
                                    }
                                }
                                if (callback) callback(objtype);
                            });
                        }
                    }
                    break;
                default:
                    break;
            }
        }
        //#endregion

        //#region 格式化
        // 日期轉換
        function formatDate(dateString) {
            const regex = /\/Date\((\d+)\)\//;
            const match = dateString.match(regex);
            const timestamp = match ? parseInt(match[1], 10) : 0;
            const date = new Date(timestamp);

            const year = date.getFullYear();
            const month = ('0' + (date.getMonth() + 1)).slice(-2);
            const day = ('0' + date.getDate()).slice(-2);

            return `${year}/${month}/${day}`;
        }

        // itemdg多表頭Function
        function format1(value, row, index) {
            const accNameCDiv = `<div class="subtd readonly-text" value="${row.AccNameC}" data-index="${index}" data-field="AccNameC">${row.AccNameC}</div>`;
            const remarkDiv = `<div class="subtd readonly-text" value="${row.Remark}" data-index="${index}" data-field="Remark">${row.Remark}</div>`;

            return `${accNameCDiv}${remarkDiv}`;
        }
        function format2(value, row, index) {
            const dcTypeNoDiv = `<div class="subtd" value="${row.DCTypeNo}" data-index="${index}" data-field="DCTypeNo">${row.DCTypeNo}</div>`;
            const dcTypeNameCDiv = `<div class="subtd" value="${row.DCTypeNameC}" data-index="${index}" data-field="DCTypeNameC">${row.DCTypeNameC}</div>`;

            return `${dcTypeNoDiv}${dcTypeNameCDiv}`;
        }
        function format3(value, row, index) {
            const currencyNoDiv = `<div class="subtd readonly-text" value="${row.CurrencyNo}" data-index="${index}" data-field="CurrencyNo">${row.CurrencyNo}</div>`;
            const currencyStDiv = `<div class="subtd readonly-text" value="${row.CurrencySt}" data-index="${index}" data-field="CurrencySymbol">MXN</div>`;

            return `${currencyNoDiv}${currencyStDiv}`;
        }
        function format4(value, row, index) {
            const moneyDiv = `<div class="subtd readonly-text" value="${row.Money}" data-index="${index}" data-field="Money">${row.Money}</div>`;
            const money1Div = `<div class="subtd readonly-text" value="${row.Money1}" data-index="${index}" data-field="Money1">${row.Money1}</div>`;

            return `${moneyDiv}${money1Div}`;
        }
        function format5(value, row, index) {
            const targetNoDiv = `<div class="subtd readonly-text" value="${row.TargetNo}" data-index="${index}" data-field="TargetNo">${row.TargetNo}</div>`;
            const targetAbbrDiv = `<div class="subtd readonly-text" value="${row.TargetAbbr}" data-index="${index}" data-field="TargetAbbr">${row.TargetAbbr}</div>`;

            return `${targetNoDiv}${targetAbbrDiv}`;
        }
        function format6(value, row, index) {
            const accProfitNoDiv = `<div class="subtd readonly-text" value="${row.AccProfitNo}" data-index="${index}" data-field="AccProfitNo">${row.AccProfitNo}</div>`;
            const accProfitNameDiv = `<div class="subtd readonly-text" value="${row.AccProfitName}" data-index="${index}" data-field="AccProfitName">${row.AccProfitName}</div>`;

            return `${accProfitNoDiv}${accProfitNameDiv}`;
        }
        function format7(value, row, index) {
            const accDeptNoDiv = `<div class="subtd readonly-text" value="${row.AccDeptNo}" data-index="${index}" data-field="AccDeptNo">${row.AccDeptNo}</div>`;
            const accDeptNameDiv = `<div class="subtd readonly-text" value="${row.AccDeptName}" data-index="${index}" data-field="AccDeptName">${row.AccDeptName}</div>`;

            return `${accDeptNoDiv}${accDeptNameDiv}`;
        }
        function format8(value, row, index) {
            const payDeptNoDiv = `<div class="subtd readonly-text" value="${row.PayDeptNo}" data-index="${index}" data-field="PayDeptNo">${row.PayDeptNo}</div>`;
            const payDeptNameDiv = `<div class="subtd readonly-text" value="${row.PayDeptName}" data-index="${index}" data-field="PayDeptName">${row.PayDeptName}</div>`;

            return `${payDeptNoDiv}${payDeptNameDiv}`;
        }
        function format9(value, row, index) {
            const offsetNoDiv = `<div class="subtd readonly-text" value="${row.OffsetNo}" data-index="${index}" data-field="OffsetNo">${row.OffsetNo}</div>`;
            const caseBillNoDiv = `<div class="subtd readonly-text" value="${row.CaseBillNo}" data-index="${index}" data-field="CaseBillNo">${row.CaseBillNo}</div>`;

            return `${offsetNoDiv}${caseBillNoDiv}`;
        }
        function format10(value, row, index) {
            const sourceDocSubTypeNameDiv = `<div class="subtd readonly-text" value="${row.SourceDocSubTypeName}" data-index="${index}" data-field="SourceDocSubTypeName">${row.SourceDocSubTypeName}</div>`;
            const sourceNoDiv = `<div class="subtd readonly-text" value="${row.SourceNo}" data-index="${index}" data-field="SourceDocSubTypeName">${row.SourceNo}</div>`;

            return `${sourceDocSubTypeNameDiv}${sourceNoDiv}`;
        }
        function format11(value, row, index) {
            const initialDocSubTypeNameDiv = `<div class="subtd readonly-text" value="${row.InitialDocSubTypeName}" data-index="${index}" data-field="InitialDocSubTypeName">${row.InitialDocSubTypeName}</div>`;
            const initialNoDiv = `<div class="subtd readonly-text" value="${row.InitialNo}" data-index="${index}" data-field="InitialNo">${row.InitialNo}</div>`;

            return `${initialDocSubTypeNameDiv}${initialNoDiv}`;
        }
        // itemdg欄位Function
        function formatTargetType(value) {
            switch (String(value)) {
                case '15':
                    return '廠商';
                case '14':
                    return '客戶';
                case '12':
                    return '員工';
                case '65':
                    return '銀行';
                default:
                    return value; // 若不在上述範圍內，則回傳原值
            }
        }

        // 新增Form
        function addForm() {
            //日期欄位
            $('.fomBillDate').datebox({
                required: true,
                formatter: function (date) {
                    var y = date.getFullYear();
                    var m = date.getMonth() + 1;
                    var d = date.getDate();
                    return y + '/' + (m < 10 ? '0' + m : m) + '/' + (d < 10 ? '0' + d : d);
                },
                parser: function (s) {
                    if (!s) return new Date();
                    var parts = s.split('/');
                    var y = parseInt(parts[0], 10);
                    var m = parseInt(parts[1], 10);
                    var d = parseInt(parts[2], 10);
                    return new Date(y, m - 1, d);
                }
            });
            //下拉選單_單據類別
            $('.fomDocSubType').combogrid({
                required: true,
                panelWidth: 355,
                panelHeight: 150,
                idField: 'DocSubType',
                textField: 'DocSubType',
                mode: 'remote',
                url: defaultUrl + controllerurl + functionurl + 'GetAddInfoCode',
                columns: [[
                    { field: 'DocSubType', title: '單據類別', width: 150 },
                    { field: 'DocSubTypeName', title: '單據類別名稱', width: 180 }
                ]],
                onSelect: function (index, row) {
                    $('.fomDocSubTypeName').textbox('setValue', row.DocSubTypeName);
                }
            });
            //下拉選單_公司編號
            $('.fomCompNo').combogrid({
                required: true,
                panelWidth: 355,
                panelHeight: 150,
                idField: 'CompId',
                textField: 'CompNo',
                mode: 'remote',
                url: defaultUrl + controllerurl + functionurl + 'GetAddInfoCode2',
                columns: [[
                    { field: 'CompNo', title: '公司編號', width: 150 },
                    { field: 'CompAbbr', title: '公司編號名稱', width: 180 }
                ]],
                onSelect: function (index, row) {
                    $('.fomCompAbbr').textbox('setValue', row.CompAbbr);
                }
            });
            //下拉選單_傳票類別
            $('.fomVoucherType').combogrid({
                required: true,
                panelWidth: 355,
                panelHeight: 150,
                idField: 'VoucherType',
                textField: 'VoucherType',
                mode: 'remote',
                url: defaultUrl + controllerurl + functionurl + 'GetAddInfoCode3',
                columns: [[
                    { field: 'VoucherType', title: '傳票類別編號', width: 150 },
                    { field: 'VoucherNameC', title: '類別中文名稱', width: 180 }
                ]],
                onSelect: function (index, row) {
                    $('.fomVoucherNameC').textbox('setValue', row.VoucherNameC);
                }
            });
            //下拉選單_幣別
            $('.fomCurrencyNo').combogrid({
                required: true,
                panelWidth: 157,
                panelHeight: 150,
                idField: 'CurrencyNo',
                textField: 'CurrencyNo',
                mode: 'remote',
                url: defaultUrl + controllerurl + functionurl + 'GetAddInfoCode4',
                columns: [[
                    { field: 'CurrencyNo', title: '幣別', width: 150 }
                ]],
                onSelect: function (index, row) {
                    $('.fomRate1').textbox('setValue', row.Rate);
                    $('.fomRate2').textbox('setValue', row.Rate);
                }
            });
            //預設欄位填值
            $('.fomEmpNo').textbox('setValue','@Model.EmpNo');
            $('.fomEmpNameC').textbox('setValue','@Model.EmpNameC');
            $('.fomDeptNo').textbox('setValue','@Model.DeptNo');
            $('.fomDeptName').textbox('setValue','@Model.DeptName');
            $('.fomCurrencySt').textbox('setValue','@Model.CurrencySt');
            //借貸欄位
            $('.colCurrencyD').textbox('setValue','@Model.CurrencySt');
            $('.colCurrencyC').textbox('setValue','@Model.CurrencySt');
            $('.colCurrency').textbox('setValue','@Model.CurrencySt');
        }
        //#endregion

        //#region 彈跳視窗
        function dlgEditAccNo() {
            objdata(objAccNo, 'read', function (data) {
                if (data.data) {
                    dlgdg1.datagrid('loadData', data.data);
                } else {
                    dlgdg1.datagrid('loadData', '');
                }
            });
            let winheight = $(window).height();
            let winwidth = $(window).width();
            $('#dlgEditAccNo').dialog({ height: winheight - 50, width: winwidth - 200, title: '會計科目' });
            $('#dlgEditAccNo').dialog('open').dialog('center');
        }
        function dlgEditRemark() {
            $('#dlgEditRemark').dialog({ height: 71, width: 313, title: '摘要說明' });
            $('#dlgEditRemark').dialog('open').dialog('center');
        }
        function dlgEditDCType() {
            $('#dlgEditDCType').dialog({ height: 71, width: 313, title: '借貸方向' });
            $('#dctpyeD').radiobutton('uncheck');
            $('#dctpyeC').radiobutton('uncheck');
            //設計選取值
            var editDCType = itemdg.datagrid('getRows')[itemdgIndex].DCTypeNo;
            if (editDCType === "D") {
                $('#dctpyeD').radiobutton('check');
            } else if (editDCType === "C") {
                $('#dctpyeC').radiobutton('check');
            }
            $('#dlgEditDCType').dialog('open').dialog('center');
        }
        function dlgEditTarget() {
            let editTargetType = itemdg.datagrid('getRows')[itemdgIndex].TargetType;
            switch (editTargetType) {
                case '15':
                    objdata(objTargetNo0, 'read', function (data) {
                        if (data.data) {
                            dlgdg30.datagrid('loadData', data.data);
                            dlgtabs.tabs('select', 0);
                        } else {
                            dlgdg30.datagrid('loadData', '');
                        }
                    });
                    break;
                case '14':
                    objdata(objTargetNo1, 'read', function (data) {
                        if (data.data) {
                            dlgdg31.datagrid('loadData', data.data);
                            dlgtabs.tabs('select', 1);
                        } else {
                            dlgdg31.datagrid('loadData', '');
                        }
                    });
                    break;
                case '12':
                    objdata(objTargetNo2, 'read', function (data) {
                        if (data.data) {
                            dlgdg32.datagrid('loadData', data.data);
                            dlgtabs.tabs('select', 2);
                        } else {
                            dlgdg32.datagrid('loadData', '');
                        }
                    });
                    break;
                case '65':
                    objdata(objTargetNo3, 'read', function (data) {
                        if (data.data) {
                            dlgdg33.datagrid('loadData', data.data);
                            dlgtabs.tabs('select', 3);
                        } else {
                            dlgdg33.datagrid('loadData', '');
                        }
                    });
                    break;
                default:
                    break;
            }
            let winheight = $(window).height();
            let winwidth = $(window).width();
            $('#dlgEditTargetNo').dialog({ height: winheight - 100, width: winwidth - 200, title: '對象編號' });
            $('#dlgEditTargetNo').dialog('open').dialog('center');
        }
        function dlgEditCurrencyNo() {
            objdata(objCurrencyNo, 'read', function (data) {
                if (data.data) {
                    dlgdg2.datagrid('loadData', data.data);
                } else {
                    dlgdg2.datagrid('loadData', '');
                }
            });
            let winheight = $(window).height();
            let winwidth = $(window).width();
            $('#dlgEditCurrencyNo').dialog({ height: 200, width: 80, title: '交易幣別' });
            $('#dlgEditCurrencyNo').dialog('open').dialog('center');
        }
        function dlgEditAccDept() {
            objdata(objAccDept, 'read', function (data) {
                if (data.data) {
                    dlgdg4.datagrid('loadData', data.data);
                } else {
                    dlgdg4.datagrid('loadData', '');
                }
            });
            let winheight = $(window).height();
            let winwidth = $(window).width();
            $('#dlgEditAccDept').dialog({ height: winheight - 100, width: winwidth - 200, title: '成本中心' });
            $('#dlgEditAccDept').dialog('open').dialog('center');
        }
        function dlgEditPayDept() {
            objdata(objPayDept, 'read', function (data) {
                if (data.data) {
                    dlgdg5.datagrid('loadData', data.data);
                } else {
                    dlgdg5.datagrid('loadData', '');
                }
            });
            let winheight = $(window).height();
            let winwidth = $(window).width();
            $('#dlgEditPayDept').dialog({ height: winheight - 100, width: winwidth - 200, title: '支付部門' });
            $('#dlgEditPayDept').dialog('open').dialog('center');
        }
        function dlgEditMoney() {
            $('#dlgEditMoney').dialog({ height: 71, width: 313, title: '交易金額' });
            $('#dlgEditMoney').dialog('open').dialog('center');
        }
        function dlgEditMoney1() {
            $('#dlgEditMoney1').dialog({ height: 71, width: 313, title: '記帳金額' });
            $('#dlgEditMoney1').dialog('open').dialog('center');
        }
        //#endregion
    </script>
    <script>
        // 監聽器
        // itemdg編輯_點擊subtd
        document.addEventListener('click', function (event) {
            // 檢查點擊的元素是否為 .subtd
            const target = event.target;

            // 如果目標元素有類別 subtd，並且它的 data-field 屬性值為 "Remark"
            if (actioncode === 'edit' || actioncode === 'add') {
                if (target.classList.contains('subtd') && target.getAttribute('data-field') === 'Remark') {
                    dlgEditRemark();
                }
                if (target.classList.contains('subtd') && target.getAttribute('data-field') === 'DCTypeNo') {
                    dlgEditDCType();
                }
                if (target.classList.contains('subtd') && target.getAttribute('data-field') === 'TargetNo') {
                    dlgEditTarget();
                }
                if (target.classList.contains('subtd') && target.getAttribute('data-field') === 'CurrencyNo') {
                    dlgEditCurrencyNo();
                }
                if (target.classList.contains('subtd') && target.getAttribute('data-field') === 'AccProfitId') {

                }
                if (target.classList.contains('subtd') && target.getAttribute('data-field') === 'AccDeptNo') {
                    dlgEditAccDept();
                }
                if (target.classList.contains('subtd') && target.getAttribute('data-field') === 'PayDeptNo') {
                    dlgEditPayDept();
                }
                if (target.classList.contains('subtd') && target.getAttribute('data-field') === 'Money') {
                    dlgEditMoney();
                }
                if (target.classList.contains('subtd') && target.getAttribute('data-field') === 'Money1') {
                    dlgEditMoney1();
                }
            }
        });
        // itemdg編輯_remark按下enter
        $(document).ready(function () {
            // 监听 #remarkBox 输入框的 keydown 事件
            $('#remarkBox').textbox('textbox').bind('keydown', function (e) {
                if (e.key === 'Enter') {
                    // 获取输入框的值
                    var remarkValue = $('#remarkBox').textbox('getValue');
                    // 更新 itemdg 中的编辑行
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            Remark: remarkValue
                        }
                    });
                    $('#remarkBox').textbox('setValue', '')
                    $('#dlgEditRemark').dialog('close');
                    voucherDC();
                }
            });
            $('#moneyBox').textbox('textbox').bind('keydown', function (e) {
                if (e.key === 'Enter') {                   
                    var remarkValue = $('#moneyBox').textbox('getValue');
                    var rowdata = itemdg.datagrid('getRows')[itemdgIndex];
                    var Money1 = (rowdata.Rate1 != null) ? remarkValue * rowdata.Rate1 : remarkValue                    
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            Money: remarkValue,
                            Money1: Money1
                        }
                    });
                    $('#moneyBox').textbox('setValue', '')
                    $('#dlgEditMoney').dialog('close');
                    voucherDC();
                }
            });
            $('#money1Box').textbox('textbox').bind('keydown', function (e) {
                if (e.key === 'Enter') {                   
                    var remarkValue = $('#money1Box').textbox('getValue');
                    var rowdata = itemdg.datagrid('getRows')[itemdgIndex];
                    var rate1 = (rowdata.Money != null) ? remarkValue / rowdata.Money : 1
                    itemdg.datagrid('updateRow', {
                        index: itemdgIndex,
                        row: {
                            Rate1: rate1,
                            Money1: remarkValue
                        }
                    });
                    $('#money1Box').textbox('setValue', '')
                    $('#dlgEditMoney1').dialog('close');
                    voucherDC();
                }
            });
        });
        // itemdg編輯_借貸選擇鈕
        $('#dctpyeC').radiobutton({
            onChange: function (checked) {
                if (checked) {
                    dctypeChecked("C");
                }
            }
        });
        $('#dctpyeD').radiobutton({
            onChange: function (checked) {
                if (checked) {
                    dctypeChecked("D");
                }
            }
        });
    </script>
    <script>
        $(document).ready(function () {  
            //$('#btnAdd').addClass('hidden-btn');
            //$('#btnEdit').addClass('hidden-btn');
            //$('#btnSave').addClass('hidden-btn');
            //$('#btnDetail').addClass('hidden-btn');
            $('#btnRefresh').addClass('hidden-btn');
            //$('#btnCancel').addClass('hidden-btn');
            $('#btnDelete').addClass('hidden-btn');

            /*$('#btnlock').hide();*/
            $('#btncheck').hide();
            $('#btnclose').hide();
            $('#btnunlock').hide();
            $('#btnreject').hide();
        });
    </script>
}
